<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>초기 비밀번호 설정 - LSSO</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: 'Noto Sans KR', sans-serif;
            background-color: #f5f5f5;
            color: #333;
            line-height: 1.6;
        }
        .container {
            max-width: 400px;
            margin: 50px auto;
            padding: 20px;
        }
        .card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 30px;
        }
        .header {
            text-align: center;
            margin-bottom: 30px;
        }
        .header h1 {
            font-size: 24px;
            color: #2c3e50;
            margin-bottom: 10px;
        }
        .form-group {
            margin-bottom: 20px;
            position: relative;
        }
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #2c3e50;
        }
        .form-group input {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
            transition: border-color 0.3s;
            height: 44px;
        }
        .password-toggle {
            position: absolute;
            right: 12px;
            top: 45px;
            cursor: pointer;
            color: #999;
            user-select: none;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .password-toggle:hover {
            color: #666;
        }
        .password-toggle svg {
            width: 18px;
            height: 18px;
        }
        .form-group input:focus {
            border-color: #3498db;
            outline: none;
        }
        .form-group input::placeholder {
            font-size: 12px;
            color: #999;
            text-align: right;
        }
        .password-requirements {
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            padding: 15px;
            margin: 20px 0;
            font-size: 14px;
        }
        .password-requirements h3 {
            color: #2c3e50;
            margin-bottom: 10px;
            font-size: 16px;
        }
        .password-requirements ul {
            list-style-type: none;
            padding-left: 0;
        }
        .password-requirements li {
            margin-bottom: 5px;
            color: #666;
        }
        .password-requirements li.valid {
            color: #28a745;
        }
        .password-requirements li.invalid {
            color: #dc3545;
        }
        .btn {
            width: 100%;
            padding: 12px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .btn:hover {
            background-color: #2980b9;
        }
        .btn:disabled {
            background-color: #bdc3c7;
            cursor: not-allowed;
        }
        .error-message {
            color: #dc3545;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="card">
            <div class="header">
                <h1>초기 비밀번호 설정</h1>
                <p>계정은 사내 이메일 주소입니다.</p>
            </div>
            
            <form id="passwordForm" onsubmit="return handleSubmit(event)">
                <input type="hidden" id="token" value="{{token}}">
                
                <div class="form-group">
                    <label for="password">새 비밀번호</label>
                    <input 
                        type="password" 
                        id="password" 
                        name="password" 
                        required 
                        minlength="8"
                        onkeyup="validatePassword()"
                    >
                    <div id="passwordError" class="error-message"></div>
                </div>
                
                <div class="form-group">
                    <label for="confirmPassword">비밀번호 확인</label>
                    <input 
                        type="password" 
                        id="confirmPassword" 
                        name="confirmPassword" 
                        required
                        onkeyup="validateConfirmPassword()"
                    >
                    <div id="confirmPasswordError" class="error-message"></div>
                </div>
                
                <div class="password-requirements">
                    <h3>비밀번호 요구사항</h3>
                    <ul>
                        <li id="length">8자 이상</li>
                        {{!-- <li id="uppercase">대문자 포함</li>
                        <li id="lowercase">소문자 포함</li>
                        <li id="number">숫자 포함</li>
                        <li id="special">특수문자 포함</li> --}}
                    </ul>
                </div>
                
                <button type="submit" class="btn" id="submitBtn" disabled>비밀번호 설정</button>
            </form>

            <!-- 로그인 폼: 비밀번호 설정 성공 시 표시 -->
            <div id="loginTestSection" style="display:none; margin-top:40px;">
                <hr style="margin: 32px 0; border: none; border-top: 1px solid #eee;">
                <h2 style="font-size:20px; color:#2c3e50; margin-bottom:16px; text-align:center;">로그인 해보기</h2>
                <form id="loginTestForm" onsubmit="return handleLoginTest(event)" style="max-width:320px; margin:0 auto;">
                    <div class="form-group">
                        <label for="loginId">이메일</label>
                        <input type="text" id="loginId" name="loginId" required autocomplete="username" placeholder="@lumir.space" style="text-align: left;">
                    </div>
                    <div class="form-group">
                        <label for="loginPw">비밀번호</label>
                        <input type="password" id="loginPw" name="loginPw" required autocomplete="current-password">
                        <span class="password-toggle" onclick="togglePassword('loginPw')">
                            <svg class="eye-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                                <circle cx="12" cy="12" r="3"></circle>
                            </svg>
                            <svg class="eye-off-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="display: none;">
                                <path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path>
                                <line x1="1" y1="1" x2="23" y2="23"></line>
                            </svg>
                        </span>
                    </div>
                    <button type="submit" class="btn">로그인</button>
                    <div id="loginTestMsg" style="margin-top:12px; font-size:14px; text-align:center;"></div>
                </form>
            </div>
        </div>
    </div>

    <script>
        const password = document.getElementById('password');
        const confirmPassword = document.getElementById('confirmPassword');
        const submitBtn = document.getElementById('submitBtn');
        const token = document.getElementById('token').value;
        const loginTestSection = document.getElementById('loginTestSection');
        const loginTestMsg = document.getElementById('loginTestMsg');

        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const eyeIcon = input.parentElement.querySelector('.eye-icon');
            const eyeOffIcon = input.parentElement.querySelector('.eye-off-icon');
            
            if (input.type === 'password') {
                input.type = 'text';
                eyeIcon.style.display = 'none';
                eyeOffIcon.style.display = 'block';
            } else {
                input.type = 'password';
                eyeIcon.style.display = 'block';
                eyeOffIcon.style.display = 'none';
            }
        }

        function validatePassword() {
            const value = password.value;
            const requirements = {
                length: value.length >= 8
                // uppercase: /[A-Z]/.test(value),
                // lowercase: /[a-z]/.test(value),
                // number: /[0-9]/.test(value),
                // special: /[!@#$%^&*]/.test(value)
            };

            // 요구사항 표시 업데이트
            Object.keys(requirements).forEach(req => {
                const element = document.getElementById(req);
                if (requirements[req]) {
                    element.classList.add('valid');
                    element.classList.remove('invalid');
                } else {
                    element.classList.add('invalid');
                    element.classList.remove('valid');
                }
            });

            // 모든 요구사항 충족 여부 확인
            const isValid = Object.values(requirements).every(Boolean);
            submitBtn.disabled = !isValid;
            
            return isValid;
        }

        function validateConfirmPassword() {
            const error = document.getElementById('confirmPasswordError');
            if (confirmPassword.value !== password.value) {
                error.textContent = '비밀번호가 일치하지 않습니다.';
                error.style.display = 'block';
                submitBtn.disabled = true;
                return false;
            } else {
                error.style.display = 'none';
                submitBtn.disabled = !validatePassword();
                return true;
            }
        }

        async function handleSubmit(event) {
            event.preventDefault();
            
            if (!validatePassword() || !validateConfirmPassword()) {
                return false;
            }

            try {
                const response = await fetch('/api/auth/change-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify({
                        newPassword: password.value
                    })
                });

                const data = await response.json();

                if (response.ok) {
                    // alert('비밀번호가 성공적으로 설정되었습니다.');
                    // window.close();
                    document.getElementById('passwordForm').style.display = 'none';
                    loginTestSection.style.display = 'block';
                } else {
                    throw new Error(data.message || '비밀번호 설정에 실패했습니다.');
                }
            } catch (error) {
                alert(error.message);
            }

            return false;
        }

        // 로그인 테스트 함수
        async function handleLoginTest(event) {
            event.preventDefault();
            loginTestMsg.textContent = '';
            let id = document.getElementById('loginId').value;
            const pw = document.getElementById('loginPw').value;

            // 도메인이 없는 경우 자동으로 추가
            if (!id.endsWith('@lumir.space')) {
                id = id + '@lumir.space';
            }

            try {
                const response = await fetch('/api/auth/check-password', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify({ email: id, currentPassword: pw })
                });
                const data = await response.json();
                console.log(data);
                if (data.isValid) {
                    loginTestMsg.style.color = '#28a745';
                    loginTestMsg.textContent = '로그인 성공! 창을 닫으셔도 됩니다.';
                } else {
                    loginTestMsg.style.color = '#dc3545';
                    loginTestMsg.textContent = data.message || '로그인에 실패했습니다.';
                }
            } catch (e) {
                loginTestMsg.style.color = '#dc3545';
                loginTestMsg.textContent = '로그인 요청 중 오류가 발생했습니다.';
            }
            return false;
        }
    </script>
</body>
</html> 