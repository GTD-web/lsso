<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>비밀번호 변경 - LSSO</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: 'Noto Sans KR', sans-serif;
            background-color: #f5f5f5;
            color: #333;
            line-height: 1.6;
        }
        .container {
            max-width: 400px;
            margin: 50px auto;
            padding: 20px;
        }
        .card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 30px;
        }
        .header {
            text-align: center;
            margin-bottom: 30px;
        }
        .header h1 {
            font-size: 24px;
            color: #2c3e50;
            margin-bottom: 10px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #2c3e50;
        }
        .form-group input {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        .form-group input:focus {
            border-color: #3498db;
            outline: none;
        }
        .password-requirements {
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            padding: 15px;
            margin: 20px 0;
            font-size: 14px;
        }
        .password-requirements h3 {
            color: #2c3e50;
            margin-bottom: 10px;
            font-size: 16px;
        }
        .password-requirements ul {
            list-style-type: none;
            padding-left: 0;
        }
        .password-requirements li {
            margin-bottom: 5px;
            color: #666;
        }
        .password-requirements li.valid {
            color: #28a745;
        }
        .password-requirements li.invalid {
            color: #dc3545;
        }
        .btn {
            width: 100%;
            padding: 12px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .btn:hover {
            background-color: #2980b9;
        }
        .btn:disabled {
            background-color: #bdc3c7;
            cursor: not-allowed;
        }
        .error-message {
            color: #dc3545;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="card">
            <div class="header">
                <h1>비밀번호 변경</h1>
                <p>새로운 비밀번호를 설정해주세요.</p>
            </div>
            
            <form id="passwordForm" onsubmit="return handleSubmit(event)">
                <input type="hidden" id="token" value="{{token}}">

                <div class="form-group">
                    <label for="currentPassword">현재 비밀번호</label>
                    <input 
                        type="password" 
                        id="currentPassword" 
                        name="currentPassword" 
                        required
                    >
                    <div id="currentPasswordError" class="error-message"></div>
                </div>
                
                <div class="form-group">
                    <label for="newPassword">새 비밀번호</label>
                    <input 
                        type="password" 
                        id="newPassword" 
                        name="newPassword" 
                        required 
                        minlength="8"
                        onkeyup="validatePassword()"
                    >
                    <div id="newPasswordError" class="error-message"></div>
                </div>
                
                <div class="form-group">
                    <label for="confirmPassword">새 비밀번호 확인</label>
                    <input 
                        type="password" 
                        id="confirmPassword" 
                        name="confirmPassword" 
                        required
                        onkeyup="validateConfirmPassword()"
                    >
                    <div id="confirmPasswordError" class="error-message"></div>
                </div>
                
                <div class="password-requirements">
                    <h3>비밀번호 요구사항</h3>
                    <ul>
                        <li id="length">8자 이상</li>
                        {{!-- <li id="uppercase">대문자 포함</li>
                        <li id="lowercase">소문자 포함</li>
                        <li id="number">숫자 포함</li>
                        <li id="special">특수문자 포함</li> --}}
                    </ul>
                </div>
                
                <button type="submit" class="btn" id="submitBtn" disabled>비밀번호 변경</button>
            </form>
        </div>
    </div>

    <script>
        const currentPassword = document.getElementById('currentPassword');
        const newPassword = document.getElementById('newPassword');
        const confirmPassword = document.getElementById('confirmPassword');
        const submitBtn = document.getElementById('submitBtn');

        function validatePassword() {
            const value = newPassword.value;
            const requirements = {
                length: value.length >= 8,
                // uppercase: /[A-Z]/.test(value),
                // lowercase: /[a-z]/.test(value),
                // number: /[0-9]/.test(value),
                // special: /[!@#$%^&*]/.test(value)
            };

            // 요구사항 표시 업데이트
            Object.keys(requirements).forEach(req => {
                const element = document.getElementById(req);
                if (requirements[req]) {
                    element.classList.add('valid');
                    element.classList.remove('invalid');
                } else {
                    element.classList.add('invalid');
                    element.classList.remove('valid');
                }
            });

            // 모든 요구사항 충족 여부 확인
            const isValid = Object.values(requirements).every(Boolean);
            submitBtn.disabled = !isValid;
            
            return isValid;
        }

        function validateConfirmPassword() {
            const error = document.getElementById('confirmPasswordError');
            if (confirmPassword.value !== newPassword.value) {
                error.textContent = '비밀번호가 일치하지 않습니다.';
                error.style.display = 'block';
                submitBtn.disabled = true;
                return false;
            } else {
                error.style.display = 'none';
                submitBtn.disabled = !validatePassword();
                return true;
            }
        }

        async function handleSubmit(event) {
            event.preventDefault();
            
            if (!validatePassword() || !validateConfirmPassword()) {
                return false;
            }

            const token = document.getElementById('token').value;
            console.log(token);
            try {
             const response = await fetch('/api/auth/check-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify({
                        currentPassword: currentPassword.value,
                    })
                });   
                const data = await response.json();
                console.log(data);
                 if (response.ok && data.isValid === false) {
                    throw new Error(data.message || '기존 비밀번호가 일치하지 않습니다.');
                } else if (!response.ok) {
                    throw new Error(data.message || '비밀번호 확인에 실패했습니다.');
                }
            } catch (error) {
                alert(error.message);
                return false;
            }

            try {
                const response = await fetch('/api/auth/change-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify({
                        newPassword: newPassword.value
                    })
                });

                const data = await response.json();

                if (response.ok) {
                    alert('비밀번호가 성공적으로 변경되었습니다.');
                    if (window.opener) {
                        window.close();
                    } else {
                        window.history.back();
                    }
                } else {
                    throw new Error(data.message || '비밀번호 변경에 실패했습니다.');
                }
            } catch (error) {
                alert(error.message);
            }

            return false;
        }
    </script>
</body>
</html> 